{"ast":null,"code":"import _classCallCheck from \"/Users/ricky/Desktop/PROJECTS/mern-plaid/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ricky/Desktop/PROJECTS/mern-plaid/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ricky/Desktop/PROJECTS/mern-plaid/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ricky/Desktop/PROJECTS/mern-plaid/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ricky/Desktop/PROJECTS/mern-plaid/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ricky/Desktop/PROJECTS/mern-plaid/client/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\nimport Accounts from \"./Accounts\";\nimport Spinner from \"./Spinner\";\n\nvar Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onLogoutClick = function (e) {\n      e.preventDefault();\n\n      _this.props.logoutUser();\n    };\n\n    _this.handleOnSuccess = function (token, metadata) {\n      // const plaidData = {\n      //   public_token: token,\n      //   metadata: metadata\n      // };\n      _this.props.addAccount(plaidData);\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAccounts();\n    } // Logout\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.auth.user;\n      var _this$props$plaid = this.props.plaid,\n          accounts = _this$props$plaid.accounts,\n          accountsLoading = _this$props$plaid.accountsLoading;\n      var dashboardContent;\n\n      if (accounts === null || accountsLoading) {\n        dashboardContent = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 26\n          }\n        });\n        dashboardContent = /*#__PURE__*/React.createElement(\"p\", {\n          className: \"center-align\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 26\n          }\n        }, \"Loading...\");\n      } else if (accounts.length > 0) {\n        // User has accounts linked\n        dashboardContent = /*#__PURE__*/React.createElement(Accounts, {\n          user: user,\n          accounts: accounts,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 26\n          }\n        });\n      } else {\n        // User has no accounts linked\n        dashboardContent = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col s12 center-align\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }\n        }, \"Welcome,\"), \" \", user.name.split(\" \")[0]), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"flow-text grey-text text-darken-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }, \"To get started, link your first bank account below\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PlaidLinkButton, {\n          buttonProps: {\n            className: \"btn btn-large waves-effect waves-light hoverable blue accent-3 main-btn\"\n          },\n          plaidLinkProps: {\n            clientName: \"BankConnector\",\n            key: \"\",\n            token: \"link-sandbox-d5ccdb0a-8547-4306-8b85-68bec1f2cc82\",\n            env: \"sandbox\",\n            product: [\"transactions\"],\n            webhook: \"https://webhook.site/c9cdcac9-8194-41b7-9369-0f725a898281\",\n            onSuccess: this.handleOnSuccess\n          },\n          onScriptLoad: function onScriptLoad() {\n            return _this2.setState({\n              loaded: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }\n        }, \"Link Account\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.onLogoutClick,\n          className: \"btn btn-large waves-effect waves-light hoverable red accent-3 main-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        }, \"Logout\")));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 8\n        }\n      }, dashboardContent);\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getAccounts: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  plaid: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    plaid: state.plaid\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser: logoutUser,\n  getAccounts: getAccounts,\n  addAccount: addAccount\n})(Dashboard);","map":{"version":3,"sources":["/Users/ricky/Desktop/PROJECTS/mern-plaid/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","PlaidLinkButton","PropTypes","connect","logoutUser","getAccounts","addAccount","Accounts","Spinner","Dashboard","onLogoutClick","e","preventDefault","props","handleOnSuccess","token","metadata","plaidData","user","auth","plaid","accounts","accountsLoading","dashboardContent","length","name","split","className","clientName","key","env","product","webhook","onSuccess","setState","loaded","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\nimport Accounts from \"./Accounts\";\nimport Spinner from \"./Spinner\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getAccounts();\n  }\n// Logout\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n// Add account\n  handleOnSuccess = (token, metadata) => {\n    // const plaidData = {\n    //   public_token: token,\n    //   metadata: metadata\n    // };\nthis.props.addAccount(plaidData);\n  };\nrender() {\n    const { user } = this.props.auth;\n    const { accounts, accountsLoading } = this.props.plaid;\nlet dashboardContent;\nif (accounts === null || accountsLoading) {\n      dashboardContent = <Spinner />;\n      dashboardContent = <p className=\"center-align\">Loading...</p>;\n    } else if (accounts.length > 0) {\n      // User has accounts linked\n      dashboardContent = <Accounts user={user} accounts={accounts} />;\n    } else {\n      // User has no accounts linked\n      dashboardContent = (\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Welcome,</b> {user.name.split(\" \")[0]}\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              To get started, link your first bank account below\n            </p>\n            <div>\n              <PlaidLinkButton\n                buttonProps={{\n                  className:\n                    \"btn btn-large waves-effect waves-light hoverable blue accent-3 main-btn\"\n                }}\n                plaidLinkProps={{\n                  clientName:\"BankConnector\",\n                  key: \"\",\n                  token:\"link-sandbox-d5ccdb0a-8547-4306-8b85-68bec1f2cc82\",\n                  env:\"sandbox\",\n                  product: [\"transactions\"],\n                  webhook: \"https://webhook.site/c9cdcac9-8194-41b7-9369-0f725a898281\",\n                  onSuccess: this.handleOnSuccess\n                }}\n                onScriptLoad={() => this.setState({ loaded: true })}\n              >\n                Link Account\n              </PlaidLinkButton>\n            </div>\n            <button\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable red accent-3 main-btn\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      );\n    }\nreturn <div className=\"container\">{dashboardContent}</div>;\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getAccounts: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  plaid: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  plaid: state.plaid\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getAccounts, addAccount }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}