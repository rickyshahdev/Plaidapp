{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ricky/Desktop/PROJECTS/mern-plaid/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ricky/Desktop/PROJECTS/mern-plaid/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { ADD_ACCOUNT, DELETE_ACCOUNT, GET_ACCOUNTS, ACCOUNTS_LOADING, GET_TRANSACTIONS, TRANSACTIONS_LOADING } from \"./types\"; // Actions will go here\n// Add account\n\nexport var addAccount = function addAccount(plaidData) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              accounts = plaidData.accounts;\n              _context.next = 3;\n              return axios.post(\"/api/plaid/accounts/add\", plaidData).then(function (res) {\n                return dispatch({\n                  type: ADD_ACCOUNT,\n                  payload: res.data\n                });\n              }).then(function (data) {\n                return accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null;\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // Delete account\n\nexport var deleteAccount = function deleteAccount(plaidData) {\n  return function (dispatch) {\n    if (window.confirm(\"Are you sure you want to remove this account?\")) {\n      var id = plaidData.id;\n      var newAccounts = plaidData.accounts.filter(function (account) {\n        return account._id !== id;\n      });\n      axios.delete(\"/api/plaid/accounts/\".concat(id)).then(function (res) {\n        return dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id\n        });\n      }).then(newAccounts ? dispatch(getTransactions(newAccounts)) : null).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  };\n}; // Get all accounts for specific user\n\nexport var getAccounts = function getAccounts() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(setAccountsLoading());\n              _context2.next = 3;\n              return axios.get(\"/api/plaid/accounts\").then(function (res) {\n                return dispatch({\n                  type: GET_ACCOUNTS,\n                  payload: res.data\n                });\n              }).catch(function (err) {\n                return dispatch({\n                  type: GET_ACCOUNTS,\n                  payload: null\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // Accounts loading\n\nexport var setAccountsLoading = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", {\n              type: ACCOUNTS_LOADING\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function setAccountsLoading() {\n    return _ref3.apply(this, arguments);\n  };\n}(); // Get Transactions\n\nexport var getTransactions = function getTransactions(plaidData) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch(setTransactionsLoading());\n              _context4.next = 3;\n              return axios.post(\"/api/plaid/accounts/transactions\", plaidData).then(function (res) {\n                return dispatch({\n                  type: GET_TRANSACTIONS,\n                  payload: res.data\n                });\n              }).catch(function (err) {\n                return dispatch({\n                  type: GET_TRANSACTIONS,\n                  payload: null\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; // Transactions loading\n\nexport var setTransactionsLoading = function setTransactionsLoading() {\n  return {\n    type: TRANSACTIONS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/ricky/Desktop/PROJECTS/mern-plaid/client/src/actions/accountActions.js"],"names":["axios","ADD_ACCOUNT","DELETE_ACCOUNT","GET_ACCOUNTS","ACCOUNTS_LOADING","GET_TRANSACTIONS","TRANSACTIONS_LOADING","addAccount","plaidData","dispatch","accounts","post","then","res","type","payload","data","getTransactions","concat","catch","err","console","log","deleteAccount","window","confirm","id","newAccounts","filter","account","_id","delete","getAccounts","setAccountsLoading","get","setTransactionsLoading"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING\n} from \"./types\";\n// Actions will go here\n\n// Add account\nexport const addAccount = plaidData => async dispatch => {\n  const accounts =  plaidData.accounts;\n  await axios\n    .post(\"/api/plaid/accounts/add\", plaidData)\n    .then(res =>\n      dispatch({\n        type: ADD_ACCOUNT,\n        payload: res.data\n      })\n    )\n    .then(data =>\n      accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null\n    )\n    .catch(err => console.log(err));\n};\n\n// Delete account\nexport const deleteAccount = plaidData => dispatch => {\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = plaidData.accounts.filter(\n      account => account._id !== id\n    );\n    axios\n      .delete(`/api/plaid/accounts/${id}`)\n      .then(res =>\n        dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id\n        })\n      )\n      .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n      .catch(err => console.log(err));\n  }\n};\n\n// Get all accounts for specific user\nexport const getAccounts = () => async dispatch => {\n  dispatch(setAccountsLoading());\n  await axios\n    .get(\"/api/plaid/accounts\")\n    .then(res =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: null\n      })\n    );\n};\n// Accounts loading\nexport const setAccountsLoading = async () => {\n  return {\n    type: ACCOUNTS_LOADING\n  };\n};\n// Get Transactions\nexport const getTransactions = plaidData => async dispatch => {\n  dispatch(setTransactionsLoading());\n  await axios\n    .post(\"/api/plaid/accounts/transactions\", plaidData)\n    .then(res =>\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: null\n      })\n    );\n};\n// Transactions loading\nexport const setTransactionsLoading = () => {\n  return{\n    type: TRANSACTIONS_LOADING\n  };\n};\n"]},"metadata":{},"sourceType":"module"}